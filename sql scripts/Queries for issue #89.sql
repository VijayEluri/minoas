select * from minoas.slavikos.EMPLOYEE
where LAST_NAME= '¡Õƒ—≈¡ƒ¡ «”'
select * from minoas.slavikos.EMPLOYEE where ID = 10746

select * from minoas.slavikos.EMPLOYMENT
where EMPLOYEE_ID = 8879


select * from minoas.slavikos.REGULAR_EMPLOYEE_INFO
where EMPLOYEE_ID = 8879
select * from minoas.slavikos.EMPLOYEE_INFO


select * from minoas.slavikos.EMPLOYMENT where ID in (
select CURRENT_EMPLOYMENT_ID from minoas.slavikos.EMPLOYEE
where IS_ACTIVE=1 and EMPLOYEE_TYPE = 'REGULAR' and CURRENT_EMPLOYMENT_ID is not null)


select * from minoas.slavikos.EMPLOYEE_INFO where EMPLOYEE_ID in (
select ID from minoas.slavikos.EMPLOYEE
where IS_ACTIVE=1 and EMPLOYEE_TYPE = 'REGULAR' and CURRENT_EMPLOYMENT_ID is not null)




select EMPLOYEE_ID from minoas.slavikos.EMPLOYEE_INFO where EMPLOYEE_ID in (
select ID from minoas.slavikos.EMPLOYEE
where IS_ACTIVE=1 and EMPLOYEE_TYPE = 'REGULAR' and CURRENT_EMPLOYMENT_ID is not null)







update minoas.slavikos.REGULAR_EMPLOYEE_INFO
set version = 0 where version is NULL


delete minoas.slavikos.REGULAR_EMPLOYEE_INFO where ID = 9847
update minoas.slavikos.EMPLOYEE set REGULAR_EMPLOYMEE_INFO_ID = 8879 where ID = 8879

update minoas.slavikos.REGULAR_EMPLOYEE_INFO
set GOG_APPOINTMENT_NO = '251' where ID = 8879

select TOP 10 EMPLOYEE_ID, PERMANENT_EMPLOYEE_ACT, PERMANENT_EMPLOYEE_ACT_DATE, IS_RECENTLY_HIRED from minoas.slavikos.EMPLOYEE_INFO
where (PERMANENT_EMPLOYEE_ACT is not NULL  AND PERMANENT_EMPLOYEE_ACT_DATE is not null) or IS_RECENTLY_HIRED <> 0


select * from minoas.slavikos.REGULAR_EMPLOYEE_INFO
where ID in (select EMPLOYEE_ID from minoas.slavikos.EMPLOYEE_INFO
where (PERMANENT_EMPLOYEE_ACT is not NULL  AND PERMANENT_EMPLOYEE_ACT_DATE is not null) or IS_RECENTLY_HIRED <> 0)


*
**************************************************************************************

** Move Data 
	- from columns PERMANENT_EMPLOYEE_ACT, PERMANENT_EMPLOYEE_ACT_DATE & IS_RECENTLY_HIRED from table EMPLOYEE_INFO 
	  to table in REGULAR_EMPLOYEE_INFO.
	- from columns APPOINTMENT_GOG & APPOINTMENT_GOG_DATE from table EMPLOYEE_INFO 
	  to table REGULAR_EMPLOYEE_INFO

use minoas

DECLARE @EmployeeInfoCursor CURSOR; 
DECLARE @EMPLOYEE_ID int;
DECLARE @REG_EMPLOYEE_ID int;
DECLARE @PERMANENT_EMPLOYEE_ACT nvarchar(255);
DECLARE @PERMANENT_EMPLOYEE_ACT_DATE datetime;
DECLARE @GOG_APPOINTMENT_NO nvarchar(255);
DECLARE @GOG_APPOINTMENT_DATE datetime;
DECLARE @IS_RECENTLY_HIRED bit;

SET @EmployeeInfoCursor = CURSOR FOR select EMPLOYEE_ID, PERMANENT_EMPLOYEE_ACT, PERMANENT_EMPLOYEE_ACT_DATE, IS_RECENTLY_HIRED, GOG_APPOINTMENT_NO, GOG_APPOINTMENT_DATE from minoas.slavikos.EMPLOYEE_INFO

OPEN @EmployeeInfoCursor 
FETCH NEXT FROM @EmployeeInfoCursor INTO @EMPLOYEE_ID, @PERMANENT_EMPLOYEE_ACT, @PERMANENT_EMPLOYEE_ACT_DATE, @IS_RECENTLY_HIRED, @GOG_APPOINTMENT_NO, @GOG_APPOINTMENT_DATE
WHILE @@FETCH_STATUS = 0 
BEGIN 
	IF(@EMPLOYEE_ID IS NOT NULL)
	BEGIN
		IF(@PERMANENT_EMPLOYEE_ACT IS NOT NULL or @PERMANENT_EMPLOYEE_ACT_DATE is not NULL)
		BEGIN 
			select @REG_EMPLOYEE_ID = EMPLOYEE_ID from minoas.slavikos.REGULAR_EMPLOYEE_INFO where EMPLOYEE_ID = @EMPLOYEE_ID
			IF(@REG_EMPLOYEE_ID IS NOT NULL)
				BEGIN
					update minoas.slavikos.REGULAR_EMPLOYEE_INFO 
					set PERMANENT_EMPLOYEE_ACT = @PERMANENT_EMPLOYEE_ACT, PERMANENT_EMPLOYEE_ACT_DATE = @PERMANENT_EMPLOYEE_ACT_DATE
					where EMPLOYEE_ID = @REG_EMPLOYEE_ID
				END 
			ELSE
				BEGIN
					INSERT INTO slavikos.REGULAR_EMPLOYEE_INFO(INSERTED_ON, VERSION, 
						EMPLOYEE_ID, PERMANENT_EMPLOYEE_ACT, PERMANENT_EMPLOYEE_ACT_DATE)
					VALUES(CURRENT_TIMESTAMP, 0,
						@REG_EMPLOYEE_ID, @PERMANENT_EMPLOYEE_ACT, @PERMANENT_EMPLOYEE_ACT_DATE)
				END

		END

		IF(@IS_RECENTLY_HIRED IS NOT NULL AND @IS_RECENTLY_HIRED = 1)
		BEGIN 
			select @REG_EMPLOYEE_ID = EMPLOYEE_ID from minoas.slavikos.REGULAR_EMPLOYEE_INFO where EMPLOYEE_ID = @EMPLOYEE_ID
			IF(@REG_EMPLOYEE_ID IS NOT NULL)
				BEGIN
					update minoas.slavikos.REGULAR_EMPLOYEE_INFO 
					set IS_RECENTLY_HIRED = @IS_RECENTLY_HIRED
					where EMPLOYEE_ID = @REG_EMPLOYEE_ID
				END 
			ELSE
				BEGIN
					INSERT INTO slavikos.REGULAR_EMPLOYEE_INFO(INSERTED_ON, VERSION, 
						EMPLOYEE_ID, IS_RECENTLY_HIRED)
					VALUES(CURRENT_TIMESTAMP, 0,
						@REG_EMPLOYEE_ID, @IS_RECENTLY_HIRED)
				END
		END

		IF(@GOG_APPOINTMENT_NO IS NOT NULL or @GOG_APPOINTMENT_DATE is not NULL)
		BEGIN 
			select @REG_EMPLOYEE_ID = EMPLOYEE_ID from minoas.slavikos.REGULAR_EMPLOYEE_INFO where EMPLOYEE_ID = @EMPLOYEE_ID
			IF(@REG_EMPLOYEE_ID IS NOT NULL)
				BEGIN
					update minoas.slavikos.REGULAR_EMPLOYEE_INFO 
					set GOG_APPOINTMENT_NO = @GOG_APPOINTMENT_NO, GOG_APPOINTMENT_DATE = @GOG_APPOINTMENT_DATE
					where EMPLOYEE_ID = @REG_EMPLOYEE_ID
				END 
			ELSE
				BEGIN
					INSERT INTO slavikos.REGULAR_EMPLOYEE_INFO(INSERTED_ON, VERSION, 
						EMPLOYEE_ID, GOG_APPOINTMENT_NO, GOG_APPOINTMENT_DATE)
					VALUES(CURRENT_TIMESTAMP, 0,
						@REG_EMPLOYEE_ID, @GOG_APPOINTMENT_NO, @GOG_APPOINTMENT_DATE)
				END
		END
	END
	FETCH NEXT FROM @EmployeeInfoCursor INTO @EMPLOYEE_ID, @PERMANENT_EMPLOYEE_ACT, @PERMANENT_EMPLOYEE_ACT_DATE, @IS_RECENTLY_HIRED, @GOG_APPOINTMENT_NO, @GOG_APPOINTMENT_DATE
END

// Check Query
select e.EMPLOYEE_ID, e.PERMANENT_EMPLOYEE_ACT, e.PERMANENT_EMPLOYEE_ACT_DATE, e.IS_RECENTLY_HIRED, e.GOG_APPOINTMENT_NO, e.GOG_APPOINTMENT_DATE, r.PERMANENT_EMPLOYEE_ACT, r.PERMANENT_EMPLOYEE_ACT_DATE, r.IS_RECENTLY_HIRED, r.GOG_APPOINTMENT_NO, r.GOG_APPOINTMENT_DATE
from minoas.slavikos.EMPLOYEE_INFO e, minoas.slavikos.REGULAR_EMPLOYEE_INFO r
where e.EMPLOYEE_ID = r.EMPLOYEE_ID

*
**************************************************************************************
*


** Transfer the data from ENTRY_INTO_SERVICE_ACT & ENTRY_INTO_SERVICE_DATE from table EMPLOYEE_INFO to table EMPLOYMENT

DECLARE @EmployeeCursor CURSOR; 
DECLARE @EMPLOYEE_ID int;
DECLARE @ENTRY_INTO_SERVICE_ACT nvarchar(255);
DECLARE @ENTRY_INTO_SERVICE_DATE datetime;

SET @EmployeeCursor = CURSOR FOR select EMPLOYEE_ID from minoas.slavikos.EMPLOYEE_INFO where EMPLOYEE_ID in (
					select ID from minoas.slavikos.EMPLOYEE
					where IS_ACTIVE=1 and EMPLOYEE_TYPE = 'REGULAR' and CURRENT_EMPLOYMENT_ID is not null)

OPEN @EmployeeCursor 
FETCH NEXT FROM @EmployeeCursor INTO @EMPLOYEE_ID
WHILE @@FETCH_STATUS = 0 
BEGIN 

	
	IF(@EMPLOYEE_ID IS NOT NULL)
	BEGIN
		select @ENTRY_INTO_SERVICE_ACT = ENTRY_INTO_SERVICE_ACT, @ENTRY_INTO_SERVICE_DATE = ENTRY_INTO_SERVICE_DATE from minoas.slavikos.EMPLOYEE_INFO where EMPLOYEE_ID = @EMPLOYEE_ID

		update minoas.slavikos.EMPLOYMENT 
		set ENTRY_INTO_SERVICE_ACT = @ENTRY_INTO_SERVICE_ACT, ENTRY_INTO_SERVICE_DATE = @ENTRY_INTO_SERVICE_DATE
		where ID in (
			select CURRENT_EMPLOYMENT_ID from minoas.slavikos.EMPLOYEE
			where ID = @EMPLOYEE_ID
		)
	
	END
	FETCH NEXT FROM @EmployeeCursor INTO @EMPLOYEE_ID
END


select * from minoas.slavikos.EMPLOYMENT 
where ID in (
	select CURRENT_EMPLOYMENT_ID from minoas.slavikos.EMPLOYEE
	where IS_ACTIVE=1 and EMPLOYEE_TYPE = 'REGULAR' and CURRENT_EMPLOYMENT_ID is not null
)